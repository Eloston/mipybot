MiPyBot goals
-------------

***IMPLEMENTED***

-Folder module for different protocol versions
    -Each protocol module name starts with v followed by the version number in decimal
    -In each protocol folder, the __init__.py script will contain the variables PROTOCOL_VERSION (the protocol version in decimal) and MINECRAFT_VERSION (the versions of Minecraft that support this protocol version)
    -There will be a packets folder that will contain packet handler code
        -Each packet handler will be in a separate file, and can be added/removed without changes to the code.
        -Each packet handler will have a send, process, and getlength functions.
        -Each packet handler will define which packet ID it deals with, so the packet processor will know which packet handler to send data to.

-Position pointer for packet data.
    -Combine getlength() and receive() together so it will be easier to modify and easier to manage and read
    -Define a read() statement to read data
        -Records position of data from the start
        -Returns the data read
        -Can take string types like "string" for a Minecraft string and "byte" for a Minecraft byte

***TODO***

-Use Yapsy to manage plugins and such

-Flexible user interface
    -A user can customize a robot base class parameters then create an object from that.
    -Multiple bots can be run at once (Using multi-threading).

-Modular bot script system (plugins)
    -Each script will be a separate file.
    -Each script can be loaded and unloaded at any time, unless by design it cannot.
    -There will be many functions that are relatively easy to learn and use in the scripting.

-Signaling system
    -Let anything anywhere in the code register a signal
    -Have "signal spaces" which is like a namespace for signals
    -Have a signal space for the robot to communicate with a user interface, and a signal space for a robot instance to communicate together
    -Recode packet code to use signals, which will make things cleaner.

-Store more information received from the server
    -Store block and chunk data (Still don't know the format. All I know is that I need to store all chunk data and implement reading and writing functions in a class.)
    -Store entity information (type, position, metadata, and special entities)

-Store block data
    -Each block will be a class
    -When chunk data is received from the server:
        -Create a class for each block?
            -Store class in dictionary, where key will be block position, and value will be the class?
        -Store block position in key, then the value will be a list object containing block type and metadata?
        (Need more understanding of blocks in Minecraft to decide)
