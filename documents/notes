MiPyBot Notes
=============

This is more of an overarching look upon MiPyBot

=============

Network (through Network Manager)
    -Encryption management
    -Protocol switching
    -Sending messages
    -Implement timeout via keep alive and other factors?
    Things to note:
        -This manager is like a framework from the perspective of other managers.
            -The reason for this is other managers should try to be protocol-agnostic (except sending messages)
Player (through Player Manager)
    -Able to retrieve Player Entity object
        -Store player entity ID here
        -Current player UUID goes in account manager AND entity object (since other players have UUIDs that can be stored)
    -Exposed API:
        -Move player around (multiple methods)
        -Move head around (multiple methods?)
        -Select item in hotbar
    -Experience? (May go with Entity Manager)
    -Hotbar 
    -Retrieve inventory through Window Manager
    -Game Mode (NOTE: Move to Player Entity if the information is available for all players)
    -Bed Location (NOTE: Move to Player Entity if the information is available for all players)
Windows (through Window Manager)
    -Interface for Inventory, chest, crafting table, furnace, etc.
        -Player inventory events are emitted from the inventory window
        -Inventory window is a persistent window in the window dictionary
    -Sign editor
World (through World Manager)
    -Chunk data
        -Store Block data
    -World Dimension
    -Game Mode
    -Time
    -Weather
Entities (through Entity Manager)
    -Store Position
    -Store State
    -Includes current player
        -Entity events for the player should remain with the player entity.
    -Collected Item event via Collect Item packet (0x0D)
    -Other players get stored just like current player
Chat (through Chat Manager)
    -Send/receive chat messages
    -Tab-completion?
Scoreboard (through Scoreboard Manager)
Statistics (through Statistics Manager)
User scripts (through Scripts Manager)
    -Can run when events are fired off (on same thread as network data received)
    -Can run on clock (via asyncio task feature)

Convenience functions for scripts (in Managers)
Mojang authentication
Support PC and PE protocols
Multiple instances via arguments
Managers live in global namespace of respective modules
    -To make access easier for Network Manager (specifically for the different protocols)
    -To make access easy for user scripts

Need to include:
-Collecting Items (somehow send out more player position packets)
-Collecting Experience
-Pathfinding algorithms
-Path vectors?
    -Read by Player Manager to make player follow a path
    -Generated by path finding algorithms
    -Maybe each vector should be parallel with the axis
-Selection objects?
    -Types: Spherical, Rectangular
    -Can be used by Entity Manager to find entities in selection
    -Can be used by World Manager to find blocks in selection
    -Relative to Entity position or Block position
    -Can be used by scripts to make the robot do certain stuff
        Ex: Rectangular selection over wheat farm and then a script will go find wheat that is fully grown and then destroy it and plant a new seed

Going to ignore:
-Sounds
-Particles?
